version: '3.8'
services:
  eurekaDocker:
    profiles: [ "docker" ]
    container_name: books
    image: eureka:0.0.1-SNAPSHOT
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8761:8761"
    networks:
      - unirEureka

  requestDocker:
    profiles: [ "docker" ]
    container_name: requestDocker
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_EUREKA_URL=eurekaDocker
    image: kevinsantiagorey/unir_requests:v.0.1
    ports:
      - "8081:8081"
    networks:
      - unir_eureca_request
    depends_on:
      - db_request
      - pgadmin_request

  booksDocker:
    profiles: [ "docker" ]
    container_name: requestDocker
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_EUREKA_URL=eurekaDocker
    image: books:0.0.1-SNAPSHOT
    ports:
      - "8081:8081"
    networks:
      - unir_eureca_request
    depends_on:
      - db_request
      - pgadmin_request


  db_request:
    profiles: [ "db", "docker" ]
    container_name: db_request
    image: postgres
    environment:
      POSTGRES_DB: requests
      POSTGRES_USER: root
      POSTGRES_PASSWORD: admin
    restart: unless-stopped
    ports:
      - 5433:5432
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - unir_eureca_request

  pgadmin_request:
    profiles: [ "db-view", "docker" ]
    container_name: pgadmin_request
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5051:80"
    networks:
      - unir_eureca_request
    restart: unless-stopped
    depends_on:
      - db_request


networks:
  unir_eureca_request:
    driver: bridge