version: '3.8'
services:

  eurekaDocker:
    profiles: [ "docker", "eureka", "all"]
    container_name: eureka
    image: eureka:0.0.1-SNAPSHOT
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8761:8761"
    networks:
      - unir_eureka

  requestDocker:
    profiles: [ "db", "docker", "request", "all"]
    container_name: request
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_EUREKA_URL=http://eureka:8761/eureka/
    image: request:0.0.1-SNAPSHOT
    ports:
      - "8081:8081"
    networks:
      - unir_request
    depends_on:
      - db_requests

  db_requests:
    profiles: [ "db", "docker", "all", "local"]
    container_name: db_request
    image: postgres
    environment:
      POSTGRES_DB: requests
      POSTGRES_USER: root
      POSTGRES_PASSWORD: admin
    restart: unless-stopped
    ports:
      - 5433:5432
    volumes:
      - ./postgres_data/request:/var/lib/postgresql/data
    networks:
      - unir_request

  booksDocker:
    profiles: [ "docker", "books", "all"]
    container_name: books
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_EUREKA_URL=http://172.18.0.2:8761/eureka/
      - ELASTIC_URL=172.19.0.2:9200
      - DB_URL=jdbc:postgresql://172.22.0.2:5432/books
    image: books:0.0.1-SNAPSHOT
    ports:
      - "8082:8082"
    networks:
      - unir_books
    depends_on:
      - db_books

  db_books:
    profiles: [ "db_books", "docker", "books", "db",  "local" ]
    container_name: db_book
    image: postgres
    environment:
      POSTGRES_DB: books
      POSTGRES_USER: root
      POSTGRES_PASSWORD: admin
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - ./postgres_data/books:/var/lib/postgresql/data
    networks:
      - unir_books





  rabbitmq:
    profiles: [ "rabbit",  "local"]
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - unir_rabbitmq

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    profiles: [ "elastic",  "local" ]
    environment: ['CLI_JAVA_OPTS=-Xms511m -Xmx511m','bootstrap.memory_lock=true','discovery.type=single-node','xpack.security.enabled=false', 'xpack.security.enrollment.enabled=false']
    ports:
      - 9200:9200
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - unir_elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.1
    container_name: kibana
    profiles: [ "elastic",  "local" ]
    environment:
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: d1a66dfd-c4d3-4a0a-8290-2abcb83ab3aa
    ports:
      - 5601:5601
    deploy:
      resources:
        limits:
          cpus: '2.0'
        reservations:
          cpus: '1.0'
    networks:
      - unir_elastic

  zipkin:
    profiles: [ "db", "docker",  "local" ]
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - 9411:9411
    networks:
      - unir_tracing
    restart: unless-stopped



networks:
  unir_rabbitmq:
    driver: bridge
  unir_eureka:
    driver: bridge
  unir_books:
    driver: bridge
  unir_request:
    driver: bridge
  unir_elastic:
    driver: bridge
  unir_tracing:
    driver: bridge